generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id               Int       @id @default(autoincrement())
  username         String    @unique
  password         String
  registeredAt     DateTime  @default(now())
  projects         Project[] @relation("UserProjects")
  managedProjects  Project[] @relation("ManagedProjects")
  invitations      ProjectInvitation[]
  notifications    Notification[]
}

model Project {
  id                Int               @id @default(autoincrement())
  name              String
  description       String?
  createdAt         DateTime           @default(now())
  managedBy         User               @relation("ManagedProjects", fields: [managedById], references: [id])
  managedById       Int
  caseStudy         CaseStudy?        
  caseStudyId       Int?               @unique
  projectStatutes   ProjectStatutes?   
  projectStatutesId Int?               @unique
  members           User[]             @relation("UserProjects")
  invitations       ProjectInvitation[]
  notifications     Notification[]
}

model CaseStudy {
  id            Int       @id @default(autoincrement())
  content       String
  version       String
  project       Project    @relation(fields: [projectId], references: [id])
  projectId     Int        @unique
  lastModified  DateTime   @default(now())
  modifiedBy    String
}

model ProjectStatutes {
  id            Int       @id @default(autoincrement())
  content       Json
  version       String
  project       Project    @relation(fields: [projectId], references: [id])
  projectId     Int        @unique
  lastModified  DateTime   @default(now())
  modifiedBy    String
}

model ProjectInvitation {
  id        Int       @id @default(autoincrement())
  projectId Int
  userId    Int
  invitedBy Int
  createdAt DateTime  @default(now())

  project   Project   @relation(fields: [projectId], references: [id])
  user      User      @relation(fields: [userId], references: [id])
}

model Notification {
  id          Int       @id @default(autoincrement())
  userId      Int
  content     String
  createdAt   DateTime  @default(now())
  read        Boolean   @default(false)

  user        User      @relation(fields: [userId], references: [id])
  project     Project?  @relation(fields: [projectId], references: [id])
  projectId   Int? 
}